<% @subtabs= my_substabs %>
<% if @refresh %>
<META HTTP-EQUIV="refresh" CONTENT="<%= @refresh%>">
<% end %>


<script language="javascript" type="text/javascript">
function hostlist(index) {
  document.startform.rev_filter.options.length = 0;
  switch(index) {
	<% for host in redis.hosts %>
	  <%= "case'#{host}':" %>
	  <% i= 0 %>
	  <% for rev in redis.revisions(host) %>
	    <%= "document.startform.rev_filter.options[#{i}]= new Option('#{rev['revision_small']} from #{redis.fmt_date(rev['revision_date'])}', '#{rev['revision']} #{rev['revision_small']}' );" %>
	  <% i+= 1 %>
	  <% end %> break;
	<% end %>
  };
  return true;
};
function queuelist(index) {
	if(index != "(other)") {
		document.startform.queue_text.value= "";		
	}
	return true;
};
function queuetext(val) {
	if(val!="") {
		document.startform.queue_filter.selectedIndex= 0;
	}
};
function action(val) {
	var params = val.split(",");
    var url = "";
    switch(params[0]) {
	  case "start":
	    url = "/start?task="+params[1]+"&host="+params[2]+"&rev="+document.getElementById("rev_filter_"+params[1]).value+
	                                                      "&count="+document.getElementById("count_filter_"+params[1]).value;
	    break;
	  case "pause":
	    url = "/pause?task="+params[1]+"&host="+params[2];
	    break;
	  case "cont":
	    url = "/pause?cont=true&task="+params[1]+"&host="+params[2];
	    break;
	  case "stop":
	    url = "/stop?kill=false&task="+params[1]+"&host="+params[2];
	    break;
	  case "kill":
	    url = "/stop?kill=true&task="+params[1]+"&host="+params[2];
	    break;
	  case "delete":
	    url = "/delete?task="+params[1]+"&host="+params[2];
	    break;
	  case "auto":
	    url = "/start_auto?task="+params[1]+"&host="+params[2]+"&rev="+document.getElementById("rev_filter_"+params[1]).value+
	                                                      "&count="+document.getElementById("count_filter_"+params[1]).value;
	    break;
	  case "autostop":
	    url = "/stop_auto?kill=true&task="+params[1]+"&host="+params[2];
	    break;	    
	  default:
	    return true;
	}
	var form = document.createElement("form");
    form.setAttribute("method", "post");
    form.setAttribute("action", "/resque/telework"+url);
    document.body.appendChild(form);
    form.submit();
};
$(document).ready(function() {
	document.startform.queue_filter.selectedIndex= 1;
	hostlist($('#host_filter').val());
	queuelist($('#queue_filter').val());
});
</script>

<% redis.reconcile %>

<% unless @dont_show_refresh %>
<div style="float:right;">
    <a href="Overview">Refresh now</a>	&nbsp;&nbsp;&nbsp;
  <% if @refresh %>
    <a href="Overview">Stop auto-refresh</a>
  <% else %>
    <a href="Overview?refresh=20">Start auto-refresh</a>
  <% end %>
</div>
<% end %>

<% notes= redis.notes_pop %>
<% if notes.length>0 %>

<h1>Notes</h1>
<table>
	<tr>
		<th>User</th>
		<th>Date</th>
		<th>Note</th>
        <th>Action</th>
	</tr>
    <% for note,id in notes.each_with_index %>
    <tr>
	    <td><%= note['user'] %></td>
	    <td><%= "#{redis.fmt_date(note['date'], true)}" %></td>
	    <td><%= note['note'] %></td>
        <td>
           <form style="margin:0px;float:center;" id="deln" name="deln" method="post" action="/resque/telework_del_note/<%= id %>" ><input type="submit" value= "Delete" /></form>
        </td>
	</tr>
    <% end %>
</table>
<br>
<% end %>

<% hosts= redis.hosts %>

<% if @scheduling %>

<h1>Starting Workers</h1>
<br>

<form style="float:left;" id="startform" name="startform" method="post" action="/resque/telework/start_task" >
<table>
	<tr>
		<th>Host</th>
		<th>Queue(s)</th>
		<th>Count</th>
        <th>Environment</th>
	</tr>

    <tr>
	    <td><%= generic_filter_with_dis("host_filter", "h", hosts.zip( hosts.map{ |h| redis.aliases(h) } ), 
                                 "onchange=\"javascript: hostlist(this.options[this.selectedIndex].value);\"") %>
	    </td>
	    <td><%= generic_filter("queue_filter", "q", ["(other)"] + Resque.redis.smembers('queues').sort << "*",
                                  "onchange=\"javascript: queuelist(this.options[this.selectedIndex].value);\"") %>
             <input id="queue_text" type="text" name="qmanual" onkeyup="javascript: queuetext(this.value);" />
	    </td>
	    <td><%= generic_filter("count_filter", "c", ['1', '2', '3', '4', '5', '6', '7', '8'] ) %>
	    </td>
        <td><%= generic_filter("env_filter", "e", ['(default)', 'production', 'staging', 'development', 'test'] ) %>
        </td>
        <td><input type="submit" value="Start" /></td>
	</tr>
</table>
    </form>
<br/><br/><br/><br/><br/><br/>
<% end %>

<br>
<% if @scheduling %>
<h1>Adding Notes</h1>
<br>


<form style="float:left;" id="noting" name="noting" method="post" action="/resque/telework/add_note">
<table>
	<tr>
		<th>User</th>
		<th>Note</th>
	</tr>

    <tr>
	    <td><input id="note_user" type="text" name="note_user"/></td>
	    <td><input id="note_text" type="text" size="100" name="note_text"/></td>
	    <td><input type="submit" value="Add"/></td>
</table>	    	    
</form>


<br><br><br><br><br><br>
<% end %>

<h1>Hosts, Revisions, Tasks and Workers</h1>
<form id="stopping_all" name="stopping_all" method="post" action="/resque/telework/stop_all">
	<%= generic_filter("mode_filter", "m", ["Stop", "Kill"]) %>
	 all workers on host <%= generic_filter_with_dis("host_filter", "h", hosts.zip( hosts.map{ |h| redis.aliases(h) } ) <<  ["[All hosts]", "[All hosts]"]) %>
	<span class="stopping_all_submit"><input type="submit" value="Go"/></span>
</form></br>
<table>
    <tr>
      <th>Host</th>
      <th>Daemon</th>
      <th>Revisions</th>
      <th>Tasks and Workers</th>
    </tr>
    <% for host, status, info in redis.daemons_state %>
      <tr>
      <td><center><% ahost = redis.aliases(host) %>
        <a href=<%= "/resque/telework/host/#{host}" %> title="<%= "#{host}\n#{redis.comments(host)}" %>" >
        <% if ahost!=host %>
            <%= ahost %>
        <% else %>
          <%= host %>
        <% end %></a>

        <% if status == 'Alive' %>
          <% if info['cpu'] %>
            <br>cpu:
            <%= info['cpu']['load_1min'] %> / <%= info['cpu']['cores'] %>
          <% end %>
          <% if info['mem'] %>
            <br>mem:
            <%= info['mem']['free'] %> G free / <%= info['mem']['total'] %> G
          <% end %>
        <% end %>
	     </center>
	  </td>
      <% if 'Alive'==status || 'Restarting'==status || 'Quitting'==status %>
        <td> <center><%= "#{status} (v#{info['version']})" %><br/><br/>
             <form style="margin:0px;float:center;" id="stopd" name="stopd" method="post" action="/resque/telework_stopitd/<%= host %>" align="middle"><input type="submit" value= <%="\"Stop\""%> /></form></center>
        </td>
      <% else %>
        <td><%= status%></td>
      <% end %>
      <td><%= redis.revisions(host).length %> revision(s) installed
      <table><tr>
	     <th>Revision</th>
	     <th>Branch</th>
	     <th>Deployed</th>
	  </tr>
      <% for rev in redis.revisions(host) %>
      <tr>
	     <td><a href= <%= "/resque/telework/revision/#{rev['revision']}" %> ><%= "#{rev['revision_small']}" %></a></td>
	     <td><%= "#{rev['revision_branch']}" %></td>
	     <td><%= "#{redis.fmt_date(rev['revision_deployement_date'], true)}" %></td>
      </tr>
      <%end%>
       </table>
      </td>
      <td><%= redis.tasks(host).length%> task(s)
	  <table><tr>
		</tr><th>Task</th>
		     <th>Status</th>
		     <th>Queue(s)</th>
		     <th>Count</th>
		     <th>Revision</th>
		     <th>Action</th>
		     <th>Worker(s)</th>
		<tr>
	  <% for id, info in redis.tasks(host) %>
	  	 <% auto= info['mode']=='Auto' %>
	     <% status= info['worker_status'] %>
	     <% status= 'Stopped' if status.blank? %>
	     <% running= status!='Stopped' %>
	     <% paused=  status=='Paused' %>
             <td><%= "<a href=\"/resque/telework/task/#{host}/#{id}\">#{id}</a>" %>
	    </td><td><center><%= auto ? "<b>Auto</b><br/><br/>" : "" %><%= "#{status.gsub(/,/,'<br/>')}" %> </center>
	    </td><td><% for q in info['queue'].split(",") %>
	    <% if q=="*" %>*
	    <% else %> <% ql= redis.queue_length(q) %>
	    <% if ql==0 %><font color="grey"><span title="Queue is empty"><%= q %></span></font>
	    <% else %><span title="<%= "#{ql} pending jobs" %>" ><%= q %></span>
	    <% end %><% end %><br/><% end %>
	    </td><td><% if running%><%= "#{info['worker_count']}" %>
                    <% else %><select id= <%= "\"count_filter_#{id}\"" %> name="c"/>
                               <% for co in (1..8).to_a %>
                                 <option <%= co==info['worker_count'].to_i ? 'selected="selected"' : '' %>value=<%= "#{co}"%> ><%= co %></option>
                             <% end %>
                    </select><% end %>
		</td><td><% if running %><a href= <%= "/resque/telework/revision/#{info['revision']}" %> ><%= "#{info['revision_small']}" %></a>
			     <% else %> <select id= <%= "\"rev_filter_#{id}\"" %> name="r"/>
			                   <% for rev in redis.revisions(host) %>
			                   <option value=<%= "\"#{rev['revision']},#{rev['revision_small']}\"" %> ><%= rev['revision_small'] %></option>
			                   <% end %>
			                </select> 
			     <% end %>
        </td><td>
	        <select id="action" name="a" onchange="javascript: action(this.options[this.selectedIndex].value);" >
	        	<option select="selected" value="select">Select</option>
	            <option <%= 'disabled="disabled"'     if running || auto %> value=<%= "\"start,#{id},#{host}\"" %> >Start worker</option>
	            <option <%= 'disabled="disabled"' unless running && !auto %> value=<%= "\"stop,#{id},#{host}\"" %> >Stop worker</option>
	            <option <%= 'disabled="disabled"' unless running && !auto %> value=<%= "\"kill,#{id},#{host}\"" %> >Kill worker</option>
	            <option <%= 'disabled="disabled"'     if (!running || paused || auto) %> value=<%= "\"pause,#{id},#{host}\"" %> >Pause worker</option>
	            <option <%= 'disabled="disabled"' unless paused && !auto %> value=<%= "\"cont,#{id},#{host}\"" %> >Resume worker</option>
	            <option <%= 'disabled="disabled"'     if auto || running %> value=<%= "\"auto,#{id},#{host}\"" %> >Start auto</option>
	            <option <%= 'disabled="disabled"'     unless auto %> value=<%= "\"autostop,#{id},#{host}\"" %> >Stop auto</option>	    
	            <option <%= 'disabled="disabled"'     if running || auto %> value=<%= "\"delete,#{id},#{host}\"" %> >Delete</option>        
	        </select>
	     </td><td align="center"><p align="center"><font size="1">
		    <% info['worker_id'].zip(info['worker_pid']) do |id,pid| %><% unless pid.blank? %>
		      <%= "<a href=\"/resque/telework/worker/#{host}/#{id}\">Worker #{id}</a>" if running %><br/>
	          <font size=1><% l= "#{host}:#{pid}" %><%= "<a href=\"/resque/workers/#{l}:#{info['queue']}\">#{l}</a>" if running %></font><br/>
	        <% end %><% end %>
	        </font></p>
	   </td></tr>
	  <%end%>
	  </table>
	  </td>
      </tr>
    <% end %>
</table>
</br>
<form id="stopping_all" name="stopping_all" method="post" action="/resque/telework/stop_all">
	<%= generic_filter("mode_filter", "m", ["Stop", "Kill"]) %>
    all workers on host <%= generic_filter_with_dis("host_filter", "h", hosts.zip( hosts.map{ |h| redis.aliases(h) } ) <<  ["[All hosts]", "[All hosts]"]) %>	 
	<span class="stopping_all_submit"><input type="submit" value="Go"/></span>
</form></br></br>

<br>
<% if @status_messages %>
<h1>Status Messages</h1>
<table>
    <tr>
      <th>Host</th>
      <th>Severity</th>
      <th>Date</th>
      <th>Message</th>
    </tr>
    <% for info in redis.statuses(@status_messages) %>
    <% c= info['severity']=='Error' ? "bgcolor=\"#ff0000\"" : "" %>
      <tr>
	    <td <%= c %>><%= redis.aliases(info['host']) %></td>
	    <td <%= c %>><%= info['severity'] %></td>
	    <td <%= c %>><%= redis.fmt_date(info['date']) %></td>
	    <td <%= c %>><%= info['message'] %></td>
	  </tr>
   <% end %>
</table>

<%end%>



</div>
